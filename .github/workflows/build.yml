name: build

on:
  push:
  schedule:
    - cron: 0 8 * * 6

jobs:
  pip:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install package
        run: python setup.py install
      - name: Test with pytest
        run: pytest

  minimal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install pandas pytest
      - name: Install package
        run: python setup.py install
      - name: Test with pytest
        run: pytest

  latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install -r ci/requirements_latest.txt
      - name: Install package
        run: python setup.py install
      - name: Test with pytest
        run: pytest

  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install build dependencies
        run: pip install setuptools wheel
      - name: Package
        run: python setup.py sdist bdist_wheel
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

  conda-build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
      - name: Set up build system
        run: |
          conda install -y -c conda-forge boa anaconda-client
          conda config --set anaconda_upload no
      - name: Run conda build
        run: conda mambabuild ci/conda_recipe -c conda-forge -c robostack
      - name: Upload to channel on tags
        if: startsWith(github.ref, 'refs/tags/')
        run: anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload -u phausamann /usr/share/miniconda/conda-bld/noarch/rigid-body-motion*.tar.bz2 --force

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
      - name: Create environment
        run: |
          conda install -y -c conda-forge mamba
          mamba env create
      - name: Build Sphinx docs and run doctests
        env:
          NBSPHINX_EXEC: always
        run: |
          source activate rbm
          make -C docs/ html
          make -C docs/ doctest
          touch docs/_build/html/.nojekyll

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: pip install black==19.10b0 flake8 isort twine "click<8.1"
      - name: Check black code style
        run: black --check .
      - name: Lint with flake8
        run: flake8 rigid_body_motion tests --ignore=E203,W503,W504 --exclude=**/externals
      - name: Run isort
        run: isort -c .
      - name: Run twine
        run: |
          python setup.py sdist
          twine check dist/*
